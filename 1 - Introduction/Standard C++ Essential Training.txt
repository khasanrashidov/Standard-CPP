C++ is a multi-paradigm, procedural, imperative, functional, object-oriented, generic, modular general-purpose programming language created by Danish computer scientist Bjarne Stroustrup as an extension of the C programming language, or "C with Classes". The language has expanded significantly over time, and modern C++ now has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.

C++ was designed with an orientation toward systems programming and embedded, resource-constrained software and large systems, with performance, efficiency, and flexibility of use as its design highlights. C++ has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications, including desktop applications, video games, servers (e.g. e-commerce, web search, or databases), and performance-critical applications (e.g. telephone switches or space probes).

1 - Introduction
	Standard C++ Essential Training.txt
2 - 1. Basic Syntax
	0. hello
	1. identifiers
	2. variables
	3. pointers
	4. references
	5. arrays and strings
	6. conditionals
	7. switch statements
	8. while and do while
	9. for loop
	10. range-based for loop
	11. using stdout
3 - 2. Defining Functions
	12. functions
	13. call by value
	14. call by reference
	15. function signature
	16. defining a function
	17. functions - passing values
	18. automatic and static variables
	19. functions - returning values
	20. function pointers
	21. jump table
	22. overloading function names
	23. overloading operators with functions
	24. defining a variable number of arguments
	25. recursion
4 - 3. The Preprocessor
	26. preprocessor
	27. macros
	28. inlcuding files
	29. conditional compilation
	30. defining macros
	31. macro caveats
	32. line continuation with backslash
	33. including files only once
	34. header files
5 - 4. Classes and Objects
	35. classes and objects
	36. defining a class
	37. data members
	38. function members
	39. constructors and destructors
	40. implicit vs. explicit constructors
	41. namespaces
	42. this keyword
	43. overloading operators with member functions
	44. overloading operators with nonmember functions
	45. conversion operators
	46. creating and destroying objects with new and delete
	47. exceptions
	48. creating function objects
	49. converting numbers to words
6 - 5. Data Types
	50. data types
	51. integer types
	52. floating-point types
	53. characters and strings
	54. character-escape sequences
	55. qualifiers
	56. the c++ reference type
	57. structured data
	58. bit fields
	59. enumerations
	60. unions
	61. defining types with typedef
	62. the void type
	63. the auto type
	64. the unambiguous null pointer constant
7 - 6. Operators
	65. common operators
	66. compound assignment operators
	67. increment&decrement
	68. comparison (relational) operators
	69. logical operators
	70. bitwise operators
	71. the ternary conditional operator
	72. determining the size of a type with sizeof
	73. determining the type of an object with typeid
	74. operator precedence
8 - 7. Object Inheritance
	75. overview of class inheritance
	76. simple inheritance
	77. accessing the base class
	78. friendship
	79. multiple inheritance
	80. overloading methods and exploring polymorphism
9 - 8. Templates
	81. understanding templates
	82. template functions
	83. template classes
	84. type inference
10 - 9. The Standard Library
	85. c++ standard library
	86. file input and output with stdio
	87. file io - structured file
	88. file management with stdio
	89. unformatted character io with stdio
	90. formatted character io with stdio
	91. string - string functions
	92. string functions in the standard library
	93. handling system errors
	94. time and date functions
11 - 10. The Standard Template Library (STL)
	95. overview of the STL
	96. vectors
	97. strings
	98. IO streams
	99. iostream - files
	100. iterators
	101. lists
	102. pairs
	103. sets
	104. maps
	105. stacks and queues
	106. stack
	107. queue
	108. deque
	109. handling exceptions
12 - Conclusion
	110. that is it, C++